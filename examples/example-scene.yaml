sources:
  dl_raster:
    # Create your satellite imagery raster tile through https://viewer.descarteslabs.com/
    type: Raster
    url: https://platform.descarteslabs.com/raster/v2/xyz/7ec653af6c0fd47df529c78c3a336d2db2250ca1/{z}/{x}/{y}.png
  test_geojson:
    type: GeoJSON
    # TO DO: how to load local files
    url: https://gist.githubusercontent.com/hanbyul-here/ecbe699a80b3e12133b2893802c72b18/raw/10adf16fbf0bde4e852f501846d39d47122ab26b/baek-dabang.geojson

layers:
  test_dl_raster:
    data: { source: dl_raster }
    draw:
      raster:
        order: 0

  test_points:
    data: { source: test_geojson }
    draw:
      points:
        interactive: true
        color: "#f00"
        size: 18px
        order: 1

jupyterlab:
  tangramEvents:
    init: |
      function (map, tangramLayer) {
        map.setView([37.5749, 126.9761], 14);
        var getFormattedTable = function(obj) {
          var table = document.createElement('table');
          for(var key in obj) {
            var tr = document.createElement('tr');
            var keyTd = document.createElement('td');
            keyTd.textContent = key;
            var valTd = document.createElement('td');
            valTd = document.createElement('td');
            valTd.textContent = obj[key];
            tr.appendChild(keyTd);
            tr.appendChild(valTd);
            table.appendChild(tr);
          }
          return table;
        }

        var popup = L.popup();
        tangramLayer.setSelectionEvents({
          click: function(selection) {
            if (selection.feature && selection.feature.source_name.includes('test')) {
              popup.setLatLng(selection.leaflet_event.latlng);
              popup.setContent(getFormattedTable(selection.feature.properties));
              popup.openOn(map);
            }
          }
        });
      }